{
    "swagger": "2.0",
    "info": {
        "title": "Globiots Resources API",
        "description": { "$ref": "globiots-api-oauthen-2-introduction.md" },

        "license": { "name": "Copyright Globiots 2021. All rights reserved" },
        "version": "v1",
        "x-logo": {
          "url": "https://vizuo.globiots.com/resources/img/daviteq-icon/logo/logo_report_01.png",
          "altText": "Globiots logo"
        }
    },
    "host": "resources.globiots.com",
    "schemes": ["https"],
    "basePath": "/rest/api/authenticated/iconfig/v1",
    "produces": ["application/json"],
    "securityDefinitions": {
        "Oauth2": {
			"type": "oauth2",
			"scopes": {
				"grant_type": "password/...",
				"username": "User login",
				"password": "Encypted password",
				"client_id": "App key",
				"client_secret": "Secret key",
				"scope": "read"
			},
			"authorizationUrl": "https://authorization.globiots.com/rest/api/v1/login/usernameOrEmail/{usernameOrEmail}/password/{encryptedPassword}",
			"tokenUrl": "https://authorization.globiots.com/oauth/token?grant_type={grant_type}&username={username}&password={password}&client_id={client_id}&client_secret={client_secret}&scope={scope}",
			"flow": "accessCode",
			"description" : "\n\n [<b>OAuth 2.0</b>](https://oauth.net/2/)"
		}
		
    },
    "security": [{ "Oauth2": ["accessToken:<YOUR_TOKEN_BY_PROFILE>"] }],
    "paths": {

        "/devices/device-id/{deviceId}?access_token={accessToken}":{
			"get": {
				"produces": ["base64-string(Base64 Decode to Json)"],
				"operationId": "Get device by id",
                "description": "This endpoint device infomation owned by a user.",
				"parameters": [
					{
                        "name": "deviceId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "accessToken",
                        "in": "query",
                        "required": true,
                        "type": "string"
                    }
				],
				"responses": {
				    "200": {
                        "description": "Contains an object with a OAuth 2.0 request. \n\n ",
                        "schema": {
                            "type": "object",
                            "properties": {
                            	"responseMessage": {
                   					"description": "`Base64 String decode`",
									"default": "Success",
                                    "type": "string"
                                },
                                "responseCode": {
                                   "default": 200,
                                   "description": "`Base64 String decode`",
                                   "type": "integer",
                                    "enum": ["200: Success", "409: Data not found", "500: Internal server error"] 
                        
                                },                              
                                "device": { "$ref": "#/definitions/DeviceInfo" },                               
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                  "$ref": "#/definitions/ErrorMessage"
                                }
                            }
                        },
                        "examples": {
                            "application/json": {
                            	"Invalid token": {
                            		"error": "invalid_token",
									"error_description": "Invalid access token: 2022030b0-c69b-4eb6-b3b9-b7cd5223e7df"
								},
								"Unauthorized": {
									"error": "unauthorized",
									"error_description": "An Authentication object was not found in the SecurityContext"
								}
                            }
							
                        }
                    },
                    "500": {
                        "description": "An error due to an internal server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                  "$ref": "#/definitions/ErrorMessage"
                                }
                            }
                        },
                        "examples": {
                            "application/json": {
                                "responseMessage": "Internal server error",
                                 "responseCode": 500 
                            }
                        }
                    }
				},
                "x-code-samples": [
                   
                ],
				"tags": ["Device"]
			},
			"parameters": []
        },
        
 		"/devices/host-name/{hostName}/?access_token={accessToken}":{
			"get": {
				"produces": ["base64-string(Base64 Decode to Json)"],
				"operationId": "Get device by hostname",
                "description": "This endpoint device infomation owned by a user.",
				"parameters": [
					{
                        "name": "hostname",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "accessToken",
                        "in": "query",
                        "required": true,
                        "type": "string"
                    }
				],
				"responses": {
				    "200": {
                        "description": "Contains an object with a OAuth 2.0 request. \n\n ",
                        "schema": {
                            "type": "object",
                            "properties": {
                            	"responseMessage": {
                   					"description": "`Base64 String decode`",
									"default": "Success",
                                    "type": "string"
                                },
                                "responseCode": {
                                   "default": 200,
                                   "description": "`Base64 String decode`",
                                   "type": "integer",
                                    "enum": ["200: Success", "409: Data not found", "500: Internal server error"] 
                        
                                },                              
                                "device": { "$ref": "#/definitions/DeviceInfo" },                               
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                  "$ref": "#/definitions/ErrorMessage"
                                }
                            }
                        },
                        "examples": {
                            "application/json": {
                            	"Invalid token": {
                            		"error": "invalid_token",
									"error_description": "Invalid access token: 2022030b0-c69b-4eb6-b3b9-b7cd5223e7df"
								},
								"Unauthorized": {
									"error": "unauthorized",
									"error_description": "An Authentication object was not found in the SecurityContext"
								}
                            }
							
                        }
                    },
                    "500": {
                        "description": "An error due to an internal server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                  "$ref": "#/definitions/ErrorMessage"
                                }
                            }
                        },
                        "examples": {
                            "application/json": {
                                "responseMessage": "Internal server error",
                                 "responseCode": 500 
                            }
                        }
                    }
				},
                "x-code-samples": [
                   
                ],
				"tags": ["Device"]
			},
			"parameters": []
        },
		
		"/devices/serial-number/{serialNumber}?access_token={accessToken}":{
			"get": {
				"produces": ["base64-string(Base64 Decode to Json)"],
				"operationId": "Get device by serial number",
                "description": "This endpoint device infomation owned by a user.",
				"parameters": [
					{
                        "name": "serialNumber",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "accessToken",
                        "in": "query",
                        "required": true,
                        "type": "string"
                    }
				],
				"responses": {
				    "200": {
                        "description": "Contains an object with a OAuth 2.0 request. \n\n ",
                        "schema": {
                            "type": "object",
                            "properties": {
                            	"responseMessage": {
                   					"description": "`Base64 String decode`",
									"default": "Success",
                                    "type": "string"
                                },
                                "responseCode": {
                                   "default": 200,
                                   "description": "`Base64 String decode`",
                                   "type": "integer",
                                    "enum": ["200: Success", "409: Data not found", "500: Internal server error"] 
                        
                                },                              
                                "device": { "$ref": "#/definitions/DeviceInfo" },                               
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                  "$ref": "#/definitions/ErrorMessage"
                                }
                            }
                        },
                        "examples": {
                            "application/json": {
                            	"Invalid token": {
                            		"error": "invalid_token",
									"error_description": "Invalid access token: 2022030b0-c69b-4eb6-b3b9-b7cd5223e7df"
								},
								"Unauthorized": {
									"error": "unauthorized",
									"error_description": "An Authentication object was not found in the SecurityContext"
								}
                            }
							
                        }
                    },
                    "500": {
                        "description": "An error due to an internal server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                  "$ref": "#/definitions/ErrorMessage"
                                }
                            }
                        },
                        "examples": {
                            "application/json": {
                                "responseMessage": "Internal server error",
                                 "responseCode": 500 
                            }
                        }
                    }
				},
                "x-code-samples": [
                   
                ],
				"tags": ["Device"]
			},
			"parameters": []
        },
      	
      	
      	
      	"/parameters/parameter-id/{parameterId}?access_token={accessToken}":{
			"get": {
				"produces": ["base64-string(Base64 Decode to Json)"],
				"operationId": "Get parameter by parameter id",
                "description": "This endpoint device infomation owned by a user.",
				"parameters": [
					{
                        "name": "parameterId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "accessToken",
                        "in": "query",
                        "required": true,
                        "type": "string"
                    }
				],
				"responses": {
				    "200": {
                        "description": "Contains an object with a OAuth 2.0 request. \n\n ",
                        "schema": {
                            "type": "object",
                            "properties": {
                            	"responseMessage": {
                   					"description": "`Base64 String decode`",
									"default": "Success",
                                    "type": "string"
                                },
                                "responseCode": {
                                   "default": 200,
                                   "description": "`Base64 String decode`",
                                   "type": "integer",
                                    "enum": ["200: Success", "409: Data not found", "500: Internal server error"] 
                        
                                },                              
                                "parameter": { "$ref": "#/definitions/ParameterInfo" },                               
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                  "$ref": "#/definitions/ErrorMessage"
                                }
                            }
                        },
                        "examples": {
                            "application/json": {
                            	"Invalid token": {
                            		"error": "invalid_token",
									"error_description": "Invalid access token: 2022030b0-c69b-4eb6-b3b9-b7cd5223e7df"
								},
								"Unauthorized": {
									"error": "unauthorized",
									"error_description": "An Authentication object was not found in the SecurityContext"
								}
                            }
							
                        }
                    },
                    "500": {
                        "description": "An error due to an internal server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                  "$ref": "#/definitions/ErrorMessage"
                                }
                            }
                        },
                        "examples": {
                            "application/json": {
                                "responseMessage": "Internal server error",
                                 "responseCode": 500 
                            }
                        }
                    }
				},
                "x-code-samples": [
                   
                ],
				"tags": ["Parameter Of Device"]
			},
			"parameters": []
        },
        
        "/parameters/device-id/{deviceId}?access_token={accessToken}":{
			"get": {
				"produces": ["base64-string(Base64 Decode to Json)"],
				"operationId": "Get list parameter by device id",
                "description": "This endpoint device infomation owned by a user.",
				"parameters": [
					{
                        "name": "deviceId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "accessToken",
                        "in": "query",
                        "required": true,
                        "type": "string"
                    }
				],
				"responses": {
				    "200": {
                        "description": "Contains an object with a OAuth 2.0 request. \n\n ",
                        "schema": {
                            "type": "object",
                            "properties": {
                            	"responseMessage": {
                   					"description": "`Base64 String decode`",
									"default": "Success",
                                    "type": "string"
                                },
                                "responseCode": {
                                   "default": 200,
                                   "description": "`Base64 String decode`",
                                   "type": "integer",
                                    "enum": ["200: Success", "409: Data not found", "500: Internal server error"] 
                        
                                },                              
                                "parameters": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/ParameterInfo"
									}
								}                               
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                  "$ref": "#/definitions/ErrorMessage"
                                }
                            }
                        },
                        "examples": {
                            "application/json": {
                            	"Invalid token": {
                            		"error": "invalid_token",
									"error_description": "Invalid access token: 2022030b0-c69b-4eb6-b3b9-b7cd5223e7df"
								},
								"Unauthorized": {
									"error": "unauthorized",
									"error_description": "An Authentication object was not found in the SecurityContext"
								}
                            }
							
                        }
                    },
                    "500": {
                        "description": "An error due to an internal server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                  "$ref": "#/definitions/ErrorMessage"
                                }
                            }
                        },
                        "examples": {
                            "application/json": {
                                "responseMessage": "Internal server error",
                                 "responseCode": 500 
                            }
                        }
                    }
				},
                "x-code-samples": [
                   
                ],
				"tags": ["Parameter Of Device"]
			},
			"parameters": []
        },
        
        "parameters/device-id/{deviceId}/type/{type}?access_token={accessToken}":{
			"get": {
				"produces": ["base64-string(Base64 Decode to Json)"],
				"operationId": "Get list parameter by device id and parameter type",
                "description": "This endpoint device infomation owned by a user.",
				"parameters": [
					{
                        "name": "deviceId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "type",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "enum": ["real_parameter", "virtual_parameter"]
                    },
                    {
                        "name": "accessToken",
                        "in": "query",
                        "required": true,
                        "type": "string"
                    }
				],
				"responses": {
				    "200": {
                        "description": "Contains an object with a OAuth 2.0 request. \n\n ",
                        "schema": {
                            "type": "object",
                            "properties": {
                            	"responseMessage": {
                   					"description": "`Base64 String decode`",
									"default": "Success",
                                    "type": "string"
                                },
                                "responseCode": {
                                   "default": 200,
                                   "description": "`Base64 String decode`",
                                   "type": "integer",
                                    "enum": ["200: Success", "409: Data not found", "500: Internal server error"] 
                        
                                },                              
                                "parameters": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/ParameterInfo"
									}
								}                               
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                  "$ref": "#/definitions/ErrorMessage"
                                }
                            }
                        },
                        "examples": {
                            "application/json": {
                            	"Invalid token": {
                            		"error": "invalid_token",
									"error_description": "Invalid access token: 2022030b0-c69b-4eb6-b3b9-b7cd5223e7df"
								},
								"Unauthorized": {
									"error": "unauthorized",
									"error_description": "An Authentication object was not found in the SecurityContext"
								}
                            }
							
                        }
                    },
                    "500": {
                        "description": "An error due to an internal server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                  "$ref": "#/definitions/ErrorMessage"
                                }
                            }
                        },
                        "examples": {
                            "application/json": {
                                "responseMessage": "Internal server error",
                                 "responseCode": 500 
                            }
                        }
                    }
				},
                "x-code-samples": [
                   
                ],
				"tags": ["Parameter Of Device"]
			},
			"parameters": []
        },
        
        
    },
    "definitions": {
        "DeviceInfo": {
			"required": ["name"],
            "type": "object",
            "description": "`Base64 String decode` \n\n [<b>Base64 Online</b>](https://www.base64decode.org/)",
			"properties": {
				"id": {
					"description": "identification",
					"type": "string",
					"readOnly": true,
					"maxLength": 200,
					"minLength": 1
				},
				"deviceName": {
                    "description": "Device Name",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
				"serialNumber": {
                    "description": "serial number",
                    "type": "string",      
                },
				"hostName": {
                    "description": "IP address of device on Globiots system.",
                    "type": "string",      
                },
				"fcc": {
                    "description": "fcc of device on Globiots system.",
                    "type": "string",      
                },
				"ncc": {
                    "description": "ncc of device on Globiots system.",
                    "type": "string",      
                },
				"latitude": {
                    "description": " latitude of iConnector.",
                    "type": "string",      
                },
				"longitude": {
                    "description": " longitude of iConnector.",
                    "type": "string",      
                },
				"isGpsAutoUpdated": {
                    "description": "isGpsAutoUpdated",
                    "type": "boolean",      
                },
				"phoneNumber": {
                    "description": "phone number of SIM.",
                    "type": "string",      
                },
				"loggingSendFrequency": {
                    "description": "Log data will be sent to the server every loggingSendFrequency second cycle.",
                    "type": "integer",      
                },
				"healthSendFrequency": {
                    "description": "Health data will be sent to the server every healthSendFrequency second cycle.",
                    "type": "integer",      
                },
				"isLoggingChanged": {
                    "description": "Sync status of parameter.",
                    "type": "boolean",      
                },
				"isModbusConfigChanged": {
                    "description": "Sync status of modbus.",
                    "type": "boolean",      
                },
				"isAlarmConfigChanged": {
                    "description": "Sync status of alarm.",
                    "type": "boolean",      
                },
				"isEventConfigChanged": {
                    "description": "Sync status of event.",
                    "type": "boolean",      
                },
				"memmapSysnData": {
                    "description": "Sync status of memmap.",
                    "type": "boolean",      
                },
				"createdDate": {
                    "title": "Created date.",
                    "type": "long",
                    "description": "Number of seconds since Unix Epoch",
                    "example": 1389087724

                },
				"lastUpdated": {
                    "title": "Last updated",
                    "type": "long",
                    "description": "Number of seconds since Unix Epoch",
                    "example": 1389087724      
                },
				"attachedDate": {
                    "title": "Attached Date",
                    "type": "long",
                    "description": "Number of seconds since Unix Epoch",
                    "example": 1389087724      
                },
				"lastSignedIn": {
                    "title": "Last signed in",
                    "type": "long",
                    "description": "Number of seconds since Unix Epoch",
                    "example": 1389087724      
                },
				"status": {
                    "description": "Status of device",
                    "type": "string",
					 "enum": [
                      "registered",
                      "attached",
                      "deattached",
                      "locked",
                    ]					
                },
				"nodeId": {
                    "description": "ID of node",
                    "type": "string",      
                },
				"memmapId": {
                    "description": "Id of memmap",
                    "type": "string",      
                },
				"model": {
                    "description": " Iconnector model",
                    "type": "string",      
                },
				"manufactureDate": {
                    "description": "Manufacture date",
                    "type": "string",      
                },
				"hardwareVersion": {
                    "description": "Hardware Version",
                    "type": "string",      
                },
				"firmwareVersion": {
                    "description": "Firmware version.",
                    "type": "string",      
                },
				"memmapVersion": {
                    "description": "Memory map version.",
                    "type": "string",      
                },
				"imei": {
                    "title": "IMEI of SIM on device.",
                    "type": "string",      
                },
				"cellularNetwork": {
                    "description": "Cellular Network",
                    "type": "string",      
                },
				"iccid": {
                    "description": "ICCID of SIM on device.",
                    "type": "string",      
                },
				"realParameterUsed": {
                    "description": "realParameterUsed",
                    "type": "integer",      
                },
				"virtualParameterUsed": {
                    "description": "virtualParameterUsed",
                    "type": "integer",      
                },
				"eventUsed": {
                    "title": "eventUsed",
                    "type": "integer",      
                },
				"alarmUsed": {
                    "title": "alarmUsed",
                    "type": "integer",      
                },
				"thingId": {
                    "title": "thingId",
                    "type": "string",      
                },
			}
			
        },
        "ParameterInfo": {
            "required": ["name"],
            "type": "object",
            "properties": {
                "id": {
                    "description": "parameter identification.",
                    "type": "string",
                    "readOnly": true,
                    "maxLength": 46,
                    "minLength": 1
                },
                "name": {
                    "description": "Parameter name.",
                    "type": "string",

                },
                "type": {
                    "description": "Parameter type.",
                    "type": "string",
                    "enum": ["real_parameter", "virtual_parameter"],
                },
                "address": {
                    "description": " Address (hexa) of parameter on memory map.",
                    "type": "string",
                },
                "unit": {
                    "description": "Unit of parameter.",
                    "type": "string",
                },
                "decimalPlaces": {
                    "description": "Length of fractional.",
                    "type": "integer",
                },
            
                "dataType": {
                    "title": "Data type.",
                    "type": "string",
                    "enum": ["byte", "unsigned_integer_16", "unsigned_integer_32", "float", "integer_16", "integer_32", "string", "hexa"]
                },
                "dataLength": {
                    "title": "Data length",
                    "type": "integer",
                    "enum": ["byte => length = 1", "unsigned_integer_16 => length = 2", "unsigned_integer_32 => length = 4", "float => length: 4", "integer_16 => length = 2", "integer_32 => length = 4", "string => length not require", "hexa => length not require"]
                },
                "expression": {
                    "description": "Expression string defined by user 'only for virtual parameter'.",
                    "type": "string",
                },
                "isLogged": {
                    "description": "This is marked logged or no logged.",
                    "type": "boolean",
                },
                "loggingPriority": {
                    "description": "Priority 'unused'.",
                    "type": "integer",
                },
                "loggingFrequency": {
                    "description": "Data will be logged every 'loggingFrequency' second cycle.",
                    "type": "integer",
                },
                "loggingTTL": {
                    "description": "time-to-live of data.",
                    "type": "long",
                },
                "createdDate": {
                    "title": "createdDate",
                    "type": "long",
                    "description": "Number of seconds since Unix Epoch",
                    "example": 15323666000
                },
                "lastUpdated": {
                    "title": "lastUpdated",
                    "type": "long",
                    "description": "Number of seconds since Unix Epoch",
                    "example": 15323666000
                },
                "deviceId": {
                    "description": "Device identification.",
                    "type": "string",
                    "default": "device-...",
                },
            }
        },
		"AddressDatalog": {
            "type": "object",
            "properties": {
                "address": {
                    "title": "address",
                    "type": "string",
                },
                "count": {
                    "description": "Num of record",
                    "type": "integer",
                },
                "data": {
                    "description": "The element definitions is [timestamp, value]: data array consists of 2 elements, the first element is timestamp, the next element is value.",
                    "type": "array",
                    "items": { "type": "array", "items": {
                        "anyOf": [
                            {
                                "title": "timestamp",
                                "type": "long",
                            },
                            {
                                "title": "value",
                                "type": "string",
                            }     
                        ]
                        }
                    }
                },
            }
        },
        "AddressDatalog2": {
            "type": "object",
            "properties": {
                "fromDate": {
                    "title": "fromDate",
                    "type": "long",
                },
                "toDate": {
                    "title": "toDate",
                    "type": "long",
                },
                 "hostname": {
                    "title": "hostname",
                    "type": "string",
                },
                "address": {
                    "title": "address",
                    "type": "string",
                },
                "count": {
                    "title": "Num of record",
                    "type": "integer",
                },
                "data": {
                   "description": "The element definitions is [timestamp, value]: data array consists of 2 elements, the first element is timestamp, the next element is value.",
                    "type": "array",
                    "items": { "type": "array", "items": {
                        "anyOf": [
                            {
                                "title": "timestamp",
                                "type": "long",
                            },
                            {
                                "title": "value",
                                "type": "string",
                            }     
                        ]
                        }
                    }
                },
            }
        },
        "AddressLastValueDatalog": {
            "type": "object",
            "properties": {
                "timestamp": {
                    "title": "timestamp",
                    "type": "string",
                },
                 "hostname": {
                    "title": "hostname",
                    "type": "string",
                },
                "address": {
                    "title": "address",
                    "type": "string",
                },
                "rawValue": {
                    "title": "rawValue",
                    "type": "string",
                }
            }
        },
        "MemmapAddressInfo": {
            "type": "object",
            "properties": {
                "id": {
                    "title": "id",
                    "type": "string",
                },
                 "label": {
                    "title": "label",
                    "type": "string",
                },
                "address": {
                    "title": "address",
                    "type": "string",
                },
                "value": {
                    "title": "value",
                    "type": "integer",
                },
                "dataType": {
                    "title": "dataType",
                    "type": "string",
                },
                "dataLength": {
                    "title": "dataLength",
                    "type": "integer",
                },
                "canRead": {
                    "title": "canRead",
                    "type": "boolean",
                },
                "canWrite": {
                    "title": "canWrite",
                    "type": "boolean",
                },
                "isChanged": {
                    "title": "isChanged",
                    "type": "boolean",
                },
                "createdDate": {
                    "title": "createdDate",
                    "type": "long",
                    "default": 15323666000,
                },
                "lastUpdated": {
                    "title": "lastUpdated",
                    "type": "long",
                    "default": 15323666000,
                },
                "deviceId": {
                    "title": "deviceId",
                    "type": "string",
                },
            }
        },
        "AlarmLogSummaryDataInfo": {
            "type": "object",
            "properties": {
                "hostname": {
                    "description": "IP address of device on Globiots system.",
                    "type": "string",
                },
                "address": {
                    "description": "address `hexadecimal` on memory map.",
                    "type": "string",
                },
                "timestamp": {
                    "description": "Iime of occurence in Epoch time GMT",
                    "type": "long",
                },
                "comment": {
                    "description": "Alarm commentation by user",
                    "type": "string",
                },
                "state": {
                    "title": "state",
                    "type": "string",
                    "enum": ["0 – LOLO", "1 – LO", "2 – NORMAL", "3 – HI", "4 – HIHI"]
                },
                "value": {
                    "description": "alarm value",
                    "type": "string",
                },
                "status": {
                    "description": "alarm status (\"ack\")",
                    "type": "string",
                },

            }
        },
        "AlarmLogHistoryDataInfo": {
            "type": "object",
            "properties": {
                "hostname": {
                    "description": "IP address of device on Globiots system.",
                    "type": "string",
                },
                "address": {
                    "description": "address `hexadecimal` on memory map.",
                    "type": "string",
                },
                "timestamp": {
                    "description": "Iime of occurence in Epoch time GMT",
                    "type": "long",
                },
                "comment": {
                    "description": "Alarm commentation by user",
                    "type": "string",
                },
                "state": {
                    "title": "state",
                    "type": "string",
                     "enum": ["0 – LOLO", "1 – LO", "2 – NORMAL", "3 – HI", "4 – HIHI"]
                },
                "value": {
                    "description": "alarm value",
                    "type": "string",
                },
                "status": {
                    "description": "alarm status (\"ack\")",
                    "type": "string",
                },
                "user": {
                    "description": "User’s name of acknowledging",
                    "type": "string",
                },
                "solution": {
                    "description": "Commentation of user after acknowledging",
                    "type": "string",
                },

            }
        },
        "AlarmLogDetailDataInfo": {
            "type": "object",
            "properties": {
                "hostname": {
                    "description": "IP address of device on Globiots system.",
                    "type": "string",
                },
                "address": {
                    "description": "address `hexadecimal` on memory map.",
                    "type": "string",
                },
                "timestamp": {
                    "description": "Iime of occurence in Epoch time GMT",
                    "type": "long",
                },
                "comment": {
                    "description": "Alarm commentation by user",
                    "type": "string",
                },
                "state": {
                    "title": "state",
                    "type": "string",
                    "enum": ["0 – LOLO", "1 – LO", "2 – NORMAL", "3 – HI", "4 – HIHI"]
                },
                "value": {
                    "description": "alarm value",
                    "type": "string",
                },
                "status": {
                    "description": "alarm status (\"ack\")",
                    "type": "string",
                },

            }
        },
        "EventLogHistoryDataInfo": {
            "type": "object",
            "properties": {
                "hostname": {
                    "description": "IP address of device on Globiots system.",
                    "type": "string",
                },
                "address": {
                    "description": "address `hexadecimal` on memory map.",
                    "type": "string",
                },
                "timestamp": {
                    "description": "Iime of occurence in Epoch time GMT",
                    "type": "long",
                },
                "comment": {
                    "description": "Event commentation by user",
                    "type": "string",
                },
                "state": {
                    "title": "state",
                    "type": "string", 
                },
                "value": {
                    "description": "Event value",
                    "type": "string",
                },
                "priority": {
                    "title": "priority",
                    "type": "string",
                },
                "uniqueId": {
                    "title": "uniqueId",
                    "type": "string",
                },
                "eventName": {
                    "description": "The name definitions on Globiots system.",
                    "type": "string",
                },

            }
        },
        "ErrorMessage": {
            "type": "object",
            "required": [
              "code",
              "message"
            ],
            "properties": {
              "code": {
                "type": "number",
                "description": "The HTTP status code"
              },
              "message": {
                "description": "A description of the error",
                "type": "string"
              }
            }
        }
    },
    "tags": [
		{ 
			"name": "Get Access Token",
			"description": { "$ref": "globiots-api-oauthen-2-get-token.md" }
		},
        { "name": "Device" },
        { "name": "Parameter Of Device" },
		{ "name": "Data Log" },
        { "name": "Memmap Info" },
        { "name": "Alarm Log Data" },
        { "name": "Event Log Data" },
        {
          "name": "WebSocket",
          "description": { "$ref": "globiots-apiv2.0-websocket.md" }
        }
    ]
}
